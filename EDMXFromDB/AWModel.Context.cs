//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EDMXFromDB
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class StatsGoEntities : DbContext
    {
        public StatsGoEntities()
            : base("name=StatsGoEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Session> Sessions { get; set; }
    
        public virtual int Session_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Session_Delete", idParameter);
        }
    
        public virtual ObjectResult<Session_GetAll_Result> Session_GetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Session_GetAll_Result>("Session_GetAll");
        }
    
        public virtual int Session_Post(string name, Nullable<System.DateTime> date, string duration, string spot, string wavesCaught, ObjectParameter iD)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var durationParameter = duration != null ?
                new ObjectParameter("Duration", duration) :
                new ObjectParameter("Duration", typeof(string));
    
            var spotParameter = spot != null ?
                new ObjectParameter("Spot", spot) :
                new ObjectParameter("Spot", typeof(string));
    
            var wavesCaughtParameter = wavesCaught != null ?
                new ObjectParameter("WavesCaught", wavesCaught) :
                new ObjectParameter("WavesCaught", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Session_Post", nameParameter, dateParameter, durationParameter, spotParameter, wavesCaughtParameter, iD);
        }
    }
}
